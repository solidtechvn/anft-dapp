/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BytesLike,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenProxy, TokenProxyInterface } from "../TokenProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107af3803806107af83398101604081905261002f91610331565b828161005c60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd61044c565b6000805160206107688339815191521461008657634e487b7160e01b600052600160045260246000fd5b6100928282600061009c565b50505050506104b1565b6100a5836100d2565b6000825111806100b25750805b156100cd576100cb838361011260201b6100291760201c565b505b505050565b6100db8161013e565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606101378383604051806060016040528060278152602001610788602791396101fe565b9392505050565b610151816102d360201b6100551760201c565b6101b85760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101dd60008051602061076883398151915260001b6102d960201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060833b61025d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101af565b600080856001600160a01b03168560405161027891906103fd565b600060405180830381855af49150503d80600081146102b3576040519150601f19603f3d011682016040523d82523d6000602084013e6102b8565b606091505b5090925090506102c98282866102dc565b9695505050505050565b3b151590565b90565b606083156102eb575081610137565b8251156102fb5782518084602001fd5b8160405162461bcd60e51b81526004016101af9190610419565b80516001600160a01b038116811461032c57600080fd5b919050565b600080600060608486031215610345578283fd5b61034e84610315565b925061035c60208501610315565b60408501519092506001600160401b0380821115610378578283fd5b818601915086601f83011261038b578283fd5b81518181111561039d5761039d61049b565b604051601f8201601f19908116603f011681019083821181831017156103c5576103c561049b565b816040528281528960208487010111156103dd578586fd5b6103ee83602083016020880161046f565b80955050505050509250925092565b6000825161040f81846020870161046f565b9190910192915050565b602081526000825180602084015261043881604085016020870161046f565b601f01601f19169190910160400192915050565b60008282101561046a57634e487b7160e01b81526011600452602481fd5b500390565b60005b8381101561048a578181015183820152602001610472565b838111156100cb5750506000910152565b634e487b7160e01b600052604160045260246000fd5b6102a8806104c06000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b610096565b565b606061004e838360405180606001604052806027815260200161024c602791396100ba565b9392505050565b3b151590565b90565b60006100917f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100b5573d6000f35b3d6000fd5b6060833b61011e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161013991906101cc565b600060405180830381855af49150503d8060008114610174576040519150601f19603f3d011682016040523d82523d6000602084013e610179565b606091505b5091509150610189828286610193565b9695505050505050565b606083156101a257508161004e565b8251156101b25782518084602001fd5b8160405162461bcd60e51b815260040161011591906101e8565b600082516101de81846020870161021b565b9190910192915050565b602081526000825180602084015261020781604085016020870161021b565b601f01601f19169190910160400192915050565b60005b8381101561023657818101518382015260200161021e565b83811115610245576000848401525b5050505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212205f556fc757f0300e5ad02e103c85dcf34476b9f87264ff2e8723f6a88b1a802864736f6c63430008040033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";

export class TokenProxy__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    implementation: string,
    owner: string,
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenProxy> {
    return super.deploy(
      implementation,
      owner,
      data,
      overrides || {}
    ) as Promise<TokenProxy>;
  }
  getDeployTransaction(
    implementation: string,
    owner: string,
    data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      implementation,
      owner,
      data,
      overrides || {}
    );
  }
  attach(address: string): TokenProxy {
    return super.attach(address) as TokenProxy;
  }
  connect(signer: Signer): TokenProxy__factory {
    return super.connect(signer) as TokenProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenProxyInterface {
    return new utils.Interface(_abi) as TokenProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenProxy {
    return new Contract(address, _abi, signerOrProvider) as TokenProxy;
  }
}
