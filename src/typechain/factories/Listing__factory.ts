/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Listing, ListingInterface } from "../Listing";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_validator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_listingId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_optionId",
        type: "uint256",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dailyPayment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "extendOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "listingId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "options",
    outputs: [
      {
        internalType: "uint256",
        name: "_totalStake",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isSet",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownership",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_optionId",
        type: "uint256",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_optionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    name: "setupOptionReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakings",
    outputs: [
      {
        internalType: "uint256",
        name: "_start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_optionId",
        type: "uint256",
      },
    ],
    name: "unregister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dailyPayment",
        type: "uint256",
      },
    ],
    name: "updateDailyPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "updateOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_validator",
        type: "address",
      },
    ],
    name: "updateValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "updateValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_worker",
        type: "address",
      },
    ],
    name: "updateWorker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingId",
        type: "uint256",
      },
    ],
    name: "updatelistingId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "validator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "workers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051620017343803806200173483398101604081905261003191610095565b600080546001600160a01b039384166001600160a01b0319918216179091556002805494909316938116939093179091556001554260045560038054909116331790556100d1565b80516001600160a01b038116811461009057600080fd5b919050565b6000806000606084860312156100aa57600080fd5b6100b384610079565b92506100c160208501610079565b9150604084015190509250925092565b61165380620000e16000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80635d03147a116100c35780638da5cb5b1161007c5780638da5cb5b146103345780639405dfdd14610347578063a02b161e14610350578063a5edfb5314610363578063ae169a5014610376578063d66d6c101461038957600080fd5b80635d03147a146102e0578063635b2770146102e957806366666aa9146102fc57806380e4cc9d14610305578063880cdc31146103185780638b0e9f3f1461032b57600080fd5b8063409e220511610115578063409e2205146102595780634338fbaa1461028b578063506f50bc1461029457806354a49902146102a757806355a373d6146102ba578063573c0bd3146102cd57600080fd5b8063103a62ba1461015d5780632a421332146101725780632e1a7d4d146101d15780633a5381b5146101e45780633fa4f2451461020f5780634048a25714610226575b600080fd5b61017061016b36600461142a565b61039c565b005b6101af61018036600461145f565b600960209081526000928352604080842090915290825290208054600182015460029092015490919060ff1683565b6040805193845260208401929092521515908201526060015b60405180910390f35b6101706101df36600461142a565b6103d4565b6002546101f7906001600160a01b031681565b6040516001600160a01b0390911681526020016101c8565b61021860055481565b6040519081526020016101c8565b61024961023436600461148b565b60076020526000908152604090205460ff1681565b60405190151581526020016101c8565b6101af61026736600461142a565b60086020526000908152604090208054600182015460029092015490919060ff1683565b61021860065481565b6101706102a236600461142a565b610609565b6101706102b53660046114a6565b610638565b6003546101f7906001600160a01b031681565b6101706102db36600461142a565b6106db565b61021860045481565b6101706102f736600461148b565b61070a565b610218600a5481565b61017061031336600461148b565b610756565b61017061032636600461148b565b610861565b610218600b5481565b6000546101f7906001600160a01b031681565b61021860015481565b61017061035e36600461142a565b6108f7565b61017061037136600461142a565b610adb565b61017061038436600461142a565b610ce6565b6101706103973660046114a6565b610f4b565b6002546001600160a01b031633146103cf5760405162461bcd60e51b81526004016103c6906114c8565b60405180910390fd5b600655565b6000546001600160a01b031633146103fe5760405162461bcd60e51b81526004016103c6906114c8565b4260045410156104505760405162461bcd60e51b815260206004820152601b60248201527f4c697374696e673a204f776e657273686970206578706972656421000000000060448201526064016103c6565b60065460009061046d9061046784620151806112f2565b90611305565b905060006104868260045461131190919063ffffffff16565b9050428110156104d85760405162461bcd60e51b815260206004820152601860248201527f4c697374696e673a20496e76616c696420616d6f756e7421000000000000000060448201526064016103c6565b60035460405163e9dc65bb60e01b815233600482015260248101859052600060448201819052916001600160a01b03169063e9dc65bb906064016020604051808303816000875af1158015610531573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105559190611502565b9050806105745760405162461bcd60e51b81526004016103c69061151d565b600a546105819085611311565b600a5560035460005460048054604051637602f0f160e01b81526001600160a01b039384169281019290925260248201889052604482015260648101859052911690637602f0f190608401600060405180830381600087803b1580156105e657600080fd5b505af11580156105fa573d6000803e3d6000fd5b50505060049290925550505050565b6002546001600160a01b031633146106335760405162461bcd60e51b81526004016103c6906114c8565b600155565b6002546001600160a01b031633146106625760405162461bcd60e51b81526004016103c6906114c8565b60648111156106b35760405162461bcd60e51b815260206004820152601d60248201527f4c697374696e673a20496e76616c6964207265776172642076616c756500000060448201526064016103c6565b600091825260086020526040909120600180820192909255600201805460ff19169091179055565b6002546001600160a01b031633146107055760405162461bcd60e51b81526004016103c6906114c8565b600555565b6002546001600160a01b031633146107345760405162461bcd60e51b81526004016103c6906114c8565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146107805760405162461bcd60e51b81526004016103c6906114c8565b4260045410156107d25760405162461bcd60e51b815260206004820152601a60248201527f4c697374696e673a204f776e657273686970206578706972656400000000000060448201526064016103c6565b6001600160a01b0381811660008181526007602052604090819020805460ff8082161560ff19909216821790925560035492516333be8f3d60e21b8152600481019490945216151560248301529091169063cefa3cf490604401600060405180830381600087803b15801561084657600080fd5b505af115801561085a573d6000803e3d6000fd5b5050505050565b6002546001600160a01b0316331461088b5760405162461bcd60e51b81526004016103c6906114c8565b42600454106108d55760405162461bcd60e51b81526020600482015260166024820152754f776e657273686970206e6f7420657870697265642160501b60448201526064016103c6565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60035460405163e6d50cd760e01b81523060048201526000916001600160a01b03169063e6d50cd7906024016040805180830381865afa15801561093f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109639190611554565b915050806109b35760405162461bcd60e51b815260206004820152601a60248201527f4c697374696e673a20496e616374697665206c697374696e672100000000000060448201526064016103c6565b60008281526009602090815260408083203384529091529020600281015460ff16610a1b5760405162461bcd60e51b81526020600482015260186024820152774c697374696e673a2052656769737465722066697273742160401b60448201526064016103c6565b6001810154600084815260086020526040902054610a3891611311565b6000848152600860205260409020556001810154600b54610a5891611311565b600b5560006001820181905560028201805460ff1916905581556003546040516387d4535160e01b8152336004820152602481018590526001600160a01b03909116906387d4535190604401600060405180830381600087803b158015610abe57600080fd5b505af1158015610ad2573d6000803e3d6000fd5b50505050505050565b6000546001600160a01b0316331480610af5575042600454105b610b115760405162461bcd60e51b81526004016103c6906114c8565b60035460405163e9dc65bb60e01b815233600482015260248101839052600160448201526000916001600160a01b03169063e9dc65bb906064016020604051808303816000875af1158015610b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8e9190611502565b905080610bad5760405162461bcd60e51b81526004016103c69061151d565b600654821015610bff5760405162461bcd60e51b815260206004820152601d60248201527f4c697374696e673a20496e73756666696369656e7420616d6f756e742100000060448201526064016103c6565b6004546000546001600160a01b031642821015610c2c57600080546001600160a01b031916331790554291505b600a54610c39908561131d565b600a55600654610c5b90610c549061046787620151806112f2565b839061131d565b6004818155600354600054604051631b33557760e01b81526001600160a01b03868116948201949094529083166024820152604481018690526064810193909352608483018790521690631b3355779060a401600060405180830381600087803b158015610cc857600080fd5b505af1158015610cdc573d6000803e3d6000fd5b5050505050505050565b60008181526009602090815260408083203384529091529020600281015460ff16610d4e5760405162461bcd60e51b81526020600482015260186024820152774c697374696e673a2052656769737465722066697273742160401b60448201526064016103c6565b6003546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbb919061157e565b90508160010154811015610e115760405162461bcd60e51b815260206004820152601e60248201527f4c697374696e673a20496e73756666696369656e742062616c616e636521000060448201526064016103c6565b6000610e1d8484611329565b60035460405163e9dc65bb60e01b8152336004820152602481018390526000604482018190529293506001600160a01b039091169063e9dc65bb906064016020604051808303816000875af1158015610e7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9e9190611502565b905080610ebd5760405162461bcd60e51b81526004016103c69061151d565b600354845460405163a9ae143160e01b81523360048201526024810185905260448101919091524260648201526001600160a01b039091169063a9ae143190608401600060405180830381600087803b158015610f1957600080fd5b505af1158015610f2d573d6000803e3d6000fd5b50504286555050600a54610f419083611311565b600a555050505050565b60035460405163e6d50cd760e01b81523060048201526000916001600160a01b03169063e6d50cd7906024016040805180830381865afa158015610f93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb79190611554565b915050806110075760405162461bcd60e51b815260206004820152601a60248201527f4c697374696e673a20496e616374697665206c697374696e672100000000000060448201526064016103c6565b60008281526008602052604090206002015460ff166110685760405162461bcd60e51b815260206004820152601d60248201527f4c697374696e673a204f7074696f6e206e6f7420617661696c61626c6500000060448201526064016103c6565b6000828152600960209081526040808320338452909152902060018101548414156110d55760405162461bcd60e51b815260206004820152601960248201527f4c697374696e673a205374616b6520756e6368616e676564210000000000000060448201526064016103c6565b6003546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561111e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611142919061157e565b9050848110156111945760405162461bcd60e51b815260206004820152601e60248201527f4c697374696e673a20496e73756666696369656e742062616c616e636521000060448201526064016103c6565b600182015485116000816111b65760018401546111b19088611311565b6111c6565b60018401546111c6908890611311565b9050811561121f5760018401546111dd908261131d565b60018501556000868152600860205260409020546111fb908261131d565b600087815260086020526040902055600b54611217908261131d565b600b5561126c565b600184015461122e9082611311565b600185015560008681526008602052604090205461124c9082611311565b600087815260086020526040902055600b546112689082611311565b600b555b42845560028401805460ff19166001179055600354604051634c2a207560e01b815233600482015260248101899052604481018890526001600160a01b0390911690634c2a207590606401600060405180830381600087803b1580156112d157600080fd5b505af11580156112e5573d6000803e3d6000fd5b5050505050505050505050565b60006112fe82846115ad565b9392505050565b60006112fe82846115cc565b60006112fe82846115ee565b60006112fe8284611605565b6000806113486005546104676064600b546112f290919063ffffffff16565b90506056811115611357575060565b426004541080156113685750603281115b15611371575060325b600061138d6064610467846006546112f290919063ffffffff16565b60008681526008602090815260408083208151606081018352815480825260018084015495830186905260029093015460ff1615159382019390935290890154949550936113f09261046791906113ea9060649084908a906112f2565b906112f2565b905060006201518087600001544261140891906115ee565b61141291906115cc565b905061141e82826112f2565b98975050505050505050565b60006020828403121561143c57600080fd5b5035919050565b80356001600160a01b038116811461145a57600080fd5b919050565b6000806040838503121561147257600080fd5b8235915061148260208401611443565b90509250929050565b60006020828403121561149d57600080fd5b6112fe82611443565b600080604083850312156114b957600080fd5b50508035926020909101359150565b60208082526010908201526f4c697374696e673a20556e617574682160801b604082015260600190565b8051801515811461145a57600080fd5b60006020828403121561151457600080fd5b6112fe826114f2565b6020808252601e908201527f4c697374696e673a20556e7375636365737366756c20617474656d7074210000604082015260600190565b6000806040838503121561156757600080fd5b611570836114f2565b9150611482602084016114f2565b60006020828403121561159057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156115c7576115c7611597565b500290565b6000826115e957634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561160057611600611597565b500390565b6000821982111561161857611618611597565b50019056fea26469706673582212200aa8cf459fffdb707e19797cdee8ca2b9a57909ee86aeb6834cdf73dfa049b1f64736f6c634300080a0033";

export class Listing__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _validator: string,
    _owner: string,
    _listingId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Listing> {
    return super.deploy(
      _validator,
      _owner,
      _listingId,
      overrides || {}
    ) as Promise<Listing>;
  }
  getDeployTransaction(
    _validator: string,
    _owner: string,
    _listingId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _validator,
      _owner,
      _listingId,
      overrides || {}
    );
  }
  attach(address: string): Listing {
    return super.attach(address) as Listing;
  }
  connect(signer: Signer): Listing__factory {
    return super.connect(signer) as Listing__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ListingInterface {
    return new utils.Interface(_abi) as ListingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Listing {
    return new Contract(address, _abi, signerOrProvider) as Listing;
  }
}
