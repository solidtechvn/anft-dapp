/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ListingStorage,
  ListingStorageInterface,
} from "../ListingStorage";

const _abi = [
  {
    inputs: [],
    name: "dailyPayment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listingId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "options",
    outputs: [
      {
        internalType: "uint256",
        name: "_totalStake",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isSet",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownership",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_optionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    name: "setupOptionReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dailyPayment",
        type: "uint256",
      },
    ],
    name: "updateDailyPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "updateOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_validator",
        type: "address",
      },
    ],
    name: "updateValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "updateValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingId",
        type: "uint256",
      },
    ],
    name: "updatelistingId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "validator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "workers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061055e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806354a4990211610097578063635b277011610066578063635b277014610236578063880cdc31146102495780638da5cb5b1461025c5780639405dfdd1461026f57600080fd5b806354a49902146101f457806355a373d614610207578063573c0bd31461021a5780635d03147a1461022d57600080fd5b80634048a257116100d35780634048a25714610156578063409e2205146101895780634338fbaa146101d8578063506f50bc146101e157600080fd5b8063103a62ba146100fa5780633a5381b51461010f5780633fa4f2451461013f575b600080fd5b61010d610108366004610493565b610278565b005b600254610122906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61014860055481565b604051908152602001610136565b6101796101643660046104ac565b60076020526000908152604090205460ff1681565b6040519015158152602001610136565b6101bb610197366004610493565b60086020526000908152604090208054600182015460029092015490919060ff1683565b604080519384526020840192909252151590820152606001610136565b61014860065481565b61010d6101ef366004610493565b6102b0565b61010d6102023660046104dc565b6102df565b600354610122906001600160a01b031681565b61010d610228366004610493565b610382565b61014860045481565b61010d6102443660046104ac565b6103b1565b61010d6102573660046104ac565b6103fd565b600054610122906001600160a01b031681565b61014860015481565b6002546001600160a01b031633146102ab5760405162461bcd60e51b81526004016102a2906104fe565b60405180910390fd5b600655565b6002546001600160a01b031633146102da5760405162461bcd60e51b81526004016102a2906104fe565b600155565b6002546001600160a01b031633146103095760405162461bcd60e51b81526004016102a2906104fe565b606481111561035a5760405162461bcd60e51b815260206004820152601d60248201527f4c697374696e673a20496e76616c6964207265776172642076616c756500000060448201526064016102a2565b600091825260086020526040909120600180820192909255600201805460ff19169091179055565b6002546001600160a01b031633146103ac5760405162461bcd60e51b81526004016102a2906104fe565b600555565b6002546001600160a01b031633146103db5760405162461bcd60e51b81526004016102a2906104fe565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031633146104275760405162461bcd60e51b81526004016102a2906104fe565b42600454106104715760405162461bcd60e51b81526020600482015260166024820152754f776e657273686970206e6f7420657870697265642160501b60448201526064016102a2565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000602082840312156104a557600080fd5b5035919050565b6000602082840312156104be57600080fd5b81356001600160a01b03811681146104d557600080fd5b9392505050565b600080604083850312156104ef57600080fd5b50508035926020909101359150565b60208082526010908201526f4c697374696e673a20556e617574682160801b60408201526060019056fea2646970667358221220de764db7c6d825142d6a86f0e1a0cb857f1c8b16cb47284b5bf17cec9d4414ad64736f6c634300080a0033";

export class ListingStorage__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ListingStorage> {
    return super.deploy(overrides || {}) as Promise<ListingStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ListingStorage {
    return super.attach(address) as ListingStorage;
  }
  connect(signer: Signer): ListingStorage__factory {
    return super.connect(signer) as ListingStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ListingStorageInterface {
    return new utils.Interface(_abi) as ListingStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ListingStorage {
    return new Contract(address, _abi, signerOrProvider) as ListingStorage;
  }
}
